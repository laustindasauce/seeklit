FROM node:20-alpine AS client-build

# Install pnpm
RUN npm install -g pnpm

# Set working directory
WORKDIR /app/client

# Copy package files first for better caching
COPY client/package.json client/pnpm-lock.yaml ./

# Install dependencies (this layer will be cached if package files don't change)
RUN pnpm install --frozen-lockfile

# Set environment variables for the client build
ARG VERSION
ENV VITE_SEEKLIT_VERSION=${VERSION}
ENV VITE_ABS_URL="BAKED_SEEKLIT_ABS_URL"
ENV VITE_ABS_EXTERNAL_URL="BAKED_SEEKLIT_ABS_EXTERNAL_URL"
ENV VITE_ADMIN_EMAIL="BAKED_SEEKLIT_ADMIN_EMAIL"
ENV VITE_DISABLE_ISSUES="BAKED_SEEKLIT_DISABLE_ISSUES"
ENV NODE_ENV=production

# Copy source code (separate layer for better caching)
COPY client/ ./

# Build the application
RUN pnpm run build

# Final production image
FROM node:20-alpine AS final

# Install su-exec, shadow for user management, nginx, and gettext (for envsubst)
RUN apk add --no-cache su-exec shadow nginx gettext

# Install pnpm
RUN npm install -g pnpm

# Set environment variables
ARG VERSION
ENV SEEKLIT_VERSION=${VERSION}
ENV TZ=America/New_York
ENV PUID=1000
ENV PGID=1000
ENV NODE_ENV=production

# Set timezone
RUN apk add --no-cache tzdata \
    && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \
    && echo $TZ > /etc/timezone

# Use existing node user (UID 1000) and rename to seeklit
RUN usermod -l seeklit -d /home/seeklit node \
    && groupmod -n seeklit node \
    && mkdir -p /home/seeklit \
    && chown seeklit:seeklit /home/seeklit

# Create necessary directories with proper ownership
RUN mkdir -p /data /config /app \
    && chown -R seeklit:seeklit /data /config /app

# Set working directory
WORKDIR /app/client

# Copy the client build and dependencies from build stage
COPY --from=client-build /app/client/build ./build
COPY --from=client-build /app/client/node_modules ./node_modules
COPY --from=client-build /app/client/package.json ./package.json

# Ensure proper ownership
RUN chown -R seeklit:seeklit /app

# Copy entrypoint script
COPY entrypoint-client.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/entrypoint-client.sh

# Copy nginx configuration TEMPLATE
COPY nginx.conf.template /etc/nginx/nginx.conf.template

# Expose ports for Remix and Nginx
EXPOSE 3000 80

# Set the entrypoint script
ENTRYPOINT ["entrypoint-client.sh"]