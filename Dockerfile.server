FROM golang:1.23-alpine AS server-build

WORKDIR /app/server

LABEL maintainer="Austin Spencer <admin@laustinspace.dev>"

# Copy go mod files first for better dependency caching
COPY server/go.mod server/go.sum ./

# Download dependencies (this layer will be cached if go.mod/go.sum don't change)
RUN go mod download && go mod verify

# Copy source code (separate layer for better caching)
COPY server/ .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .

FROM alpine:3.21

# Install su-exec and shadow for user management
RUN apk add --no-cache su-exec shadow

# Set environment variables
ARG VERSION
ENV SEEKLIT_VERSION=${VERSION}
ENV SEEKLIT_CONF_FILE="/config/seeklit.conf"
ENV TZ=America/New_York
ENV PUID=1000
ENV PGID=1000

# Set timezone
RUN apk add --no-cache tzdata \
    && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \
    && echo $TZ > /etc/timezone

# Create seeklit user and group with home directory
RUN addgroup -g 1000 seeklit \
    && adduser -D -u 1000 -G seeklit -s /bin/sh -h /home/seeklit seeklit

# Create necessary directories with proper ownership
RUN mkdir -p /data /config /app \
    && chown -R seeklit:seeklit /data /config /app

# Copy the Go server binary and config from build stage
COPY --from=server-build /app/server/main /app/
COPY --from=server-build /app/server/default.conf /app/
COPY --from=server-build /app/server/conf/ /app/conf/

# Ensure proper ownership
RUN chown -R seeklit:seeklit /app

# Copy entrypoint script
COPY entrypoint-server.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/entrypoint-server.sh

WORKDIR /app

EXPOSE 8416

ENTRYPOINT ["entrypoint-server.sh"]